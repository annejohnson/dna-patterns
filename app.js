(function () {
	var spacer = 130;
	var radiusMultiplier = 18;
	var radiusAdder = 4;
	var nucleotides = "ACGT";
	var circleDrawTime = 3000;
	var circleRemoveTime = circleDrawTime / 4;
	var birdVis;

	var maxRadius = ((nucleotides.length - 1) + radiusAdder) * radiusMultiplier;

	// BOOM!
	window.onload = function() {
		birdVis = Raphael("birdVis");
		makeSelectTag();
		document.getElementById("pionus").click();
	};

	// Turns a nucleotide into a number
	var nucleotideToNum = function(char) {
		return nucleotides.indexOf(char);
	}

	// Writes visualization to div#birdVis
	// param data: array of raw numbers used for computing radii
	// param colors: array of colors to be applied to shapes
	var writeVis = function(data, colors){
		birdVis.forEach(function(circ) {
			circ.animate({r: 0}, circleRemoveTime, "linear", function() {
				circ.remove();
			});
		});
		var currX = 0;
		var currY = 0;
		for (var i = 0; i < data.length; i++) {
			var radius = (data[i] + radiusAdder) * radiusMultiplier;
			var newCircle = birdVis.circle(currX, currY, 0);
			newCircle.attr({fill: colors[data[i]], stroke: colors[data[i]]});
			currX += radius + spacer;
			newCircle.animate({r: radius}, circleDrawTime, "elastic");
			if (currX > screen.width) {
				currX = 0;
				currY += maxRadius + spacer;
			}
		}
	};

	// Makes a tags for the page
	// Binds clicks to graph updates
	var makeSelectTag = function() {
		for (var bird in birds) {
			var btn = document.createElement("a");
			btn.textContent = birds[bird].name;
			btn.id = bird;
			btn.className = "button chooser";
			document.getElementById("choicesContainer").appendChild(btn);
			btn.onclick = function(e) {
				e.preventDefault();
				var allButtons = document.getElementsByClassName("chooser");
				for (var i = 0; i < allButtons.length; i++) {
					allButtons[i].className = "button chooser";
				}
				this.className = "button chooser active";
				changeBird(this.id);
			};
		}
	};

	// Changes the graph to show the selected bird
	// Param newBird: the simple string representing the type of bird
	var changeBird = function(newBird) {
		writeVis(makeData(birds[newBird].seq), birds[newBird].colors);
	};

	// Takes a DNA char string
	// Returns an array of nums
	var makeData = function(str) {
		return str.split('').map(function(char) { return nucleotideToNum(char); });
	}

	// Bird data!
	var birds = {
		pionus: {
			name: "Maximilian Pionus",
			seq: "ATAACTCCCATTGCAAAACTAATCTCAGCCCTAAGTATCCTGCTAGGAACAACAATAACAATCACAAGTAACCACTGAGCCATAGCTTGGGCAGGACTAGAAATCAACACCCTATCAATCATCCCCATAATCTCAAAATCCCACCACCCACGAGCCGTTGAAGCAGCAACCAAGTACTTCCTAGTACAAGCTGCCGCTTCAACACTAGTACTCTTCTCAAGCACAATCAACGCATGACACACAGGACAATGAGACATCACCCTACTCACCCATCCCCCAGCATGTCTCCTACTAACCACCGCAGTTGCTATTAAGCTGGGCCTAACTCCATTCCACTTTTGATTTCCAGAAGTACTCCAAGGGTCATCCCTCCCCACAGCCCTACTTCTCTCAACAGTAATAAAACTCCCACCAATTACACTCCTACTAATCACATCCCACTCACTAAACCCTGTCCTACTCACTACCATATCCATTATATCCGTCGCCCTTGGCGGCTGAATGGGACTAAACCAAACACAAACCCGAAAAATTATAGCCTTCTCATCCATCTCCCACCTGGGCTGAATAACATCCATTATCACCTACAGCCCAAAACTAACCCTACTAACCTTCTACGCCTACGCCCTAATAACAACCTCCATCTTCCTCACTATAAACACAACCAACACCTTAAAACTATCAACACTAATGACTGCATGAACCAAAACTCCCATACTAAACACAACCCTCATACTAACACTACTATCACTAGCAGGCCTCCCCCCACTAACAGGCTTCCTGCCCAAATGACTCATCATCCAAGAACTCGTCAAGCAAGAAATAACCACAACAGCCACAATCATCTCCATAATATCGCTCCTAGGGTTATTCTTCTACCTACGCCTAGCATACTGCTCCACTATCACACTCCCCCCCAACCCCTCTAGCAAGATAAAACAGTGATCCACTAAAAACCCAACCAACACTCTAGTCTCCACACTCACCTCCCTGTCCATCTCACTCCTCCCACTCTCCCCTATAATCCTCACCACCACTTAA",
			colors: ["olive", "green", "silver", "purple"]
		},
		barraband: {
			name: "Barraband",
			seq: "ATGAGTCCCCTTACAAAACTTATTCTAACTACAAGTCTGCTCACAGGGACAACAATCACAATCACAAGCAACCACTGACTAATAGCCTGAACCGGATTAGAAATCAACACCTTAGCCATCATCCCCCTAATCTCAAAATCCCACCACCCACGAGCCATCGAAGCAGCAACCAAATACTTCCTAGTACAAGCAGCAGCCTCCACACTAATACTCTTCTCAAGCACAATAAACGCATGATTTACTGGACAGTGAGACATCACCCAGCTCACCCACCCTCCATCATCCGCTCTACTAACCGCTGCAATCGCTATTAAACTAGGCCTAGCCCCATTCCACTTCTGATTTCCAGAAGCACTCCAAGGGTCATCCCTTACCACGGCCCTCCTTCTCTCAACAGTAATAAAACTCCCACCAACTACCATTCTCCTACTCACATCACACTCACTAAACCCAACACTACTCACCACCATATCCATCATATCCATCGCCCTAGGTGGATGAATAGGACTTAACCAAACACAAACCCGCAAAATCCTAGCCTTCTCCTCCATTTCACACCTAGGCTGAATAACCACCATCATCATCTACAACCCAAAACTAACCCTACTAACCTTCCTCACCTACATCCTAATAACAACCTCTATCTTTCTCACCATAAACACAACCAACACCCTAAAGCTACCAACGCTAATAACCTCCTGAACCAAAACCCCCACCCTAAGCACAACCCTCATACTAACCCTCCTCTCACTAGCGGGTCTCCCCCCACTAACAGGATTTTTACCCAAATGACTCATCATCCAAGAGCTCACTAAACAAGAAATAACCACAACAGCTACAATCATCTCTATATTCTCACTCCTAGGACTATTCTTCTACCTCCGCTTGGCATACTGTTCAACAATCACCCTACCTCCAAACCCCTCAAACAAAATAAAACAATGATCCCCTAAAAAACCAACAAACATCCTAATCTCTACATCTACCTCACTATCCACCTCACTCCTACCACTCTCCCCTATAATTCTCACCACCATTTAA",
			colors: ["#ff3f00", "#fff200", "#ffbe82", "#41d344"] // red yellow peach green
		},
		yellowCrested: {
			name: "Yellow-Crested Cockatoo",
			seq: "GTTCAACTCCCTCCCCTACTAATGAGCCCCCTTACAAAACTCACCCTAACACTCAGCCTAGCCCTAGGAACAACAACCACAATCACAAGCAACCACTGAGTCACAGCCTGAGCTGGATTAGAAATCAACACCTTAGCCATTATTCCATTGATCTCAAAATCTCACCACCCCCGAGCTATCGAAGCAGCAACCAAATATTTCCTAACCCAAGCAACTGCCTCAGCACTAATACTCTTTTCAAGCACAACCAACGCATGGTCTTCCGGACAATGAGACATCACCCAACTCACCAACCCTCCATCATGTCTCCTCCTTACAACTGCAATCGCAATCAAACTAGGCCTCACCCCATTCCACTTTTGATTCCCAGAAGTGCTACAAGGCTCATCCCTCACCACAGCCCTGCTGCTCTCCACAGCAATAAAACTCCCACCAACCGCCATTCTACTCCTCACTTCACACTCACTAAACCCCACGCTACTCTTCACCATAGCCATAATATCTATTGCCTTAGGCGGCTGAATAGGGCTTAATCAAACACAAACCCGAAAGATCCTAGCCTTCTCATCCATCTCACACCTAGGCTGAATAACCATCATCATCACCTACAACCCAAAGCTAACTCTGCTAACCTTCTACCTCTACACCCTAATAACAGCATCCATCTTCCTCTCCATAAACTCAACCAATACCCTAAAACTATCAACACTAATAACCTCATGAACCAAAACCCCCATACTAAATACAACCCTTATACTAACCCTCCTGTCATTAGCAGGCCTCCCCCCACTAACAGGCTTTCTACCCAAATGACTTATCATCCAAGAGCTAACCAAACAGGAAATAGCCACAACAGCCACTATTATCTCTATACTCTCACTCCTGGGGCTATTCTTCTACCTACGCCTAGCGTACTGTTCAACAATCACCCTCCCCCCCAACTCCTCAAACAAAATAAAACAGTGATCCACCAAAAAACCAACTAACCCCCTAATTCCCACACTCACGCTCCTATCCCTGTTACTCCTGCCACTCTCCCCCATAATCCCCACCACCACTTAAGAAACTTAGGATAATATCAAACCAAGG",
			colors: ["#fff200", "white", "gray", "orange"] // yellow white gray orange
		},
		palm: {
			name: "Palm Cockatoo",
			seq: "GTTGAGCCCCCTCCCCTACTAATGAGCCCCCTCACAAAATTCATCCTAGCACTAAGCCTAACCTCAGGGACAATAATCACAATCACAAGCAACCACTGAGTAATAGCCTGAGCCGGACTAGAAATCAATACCCTAACCATTCTCCCCCTAATCTCAAAATCCCACCACCCCCGAGCCATCGAAGCTACAATCAAATACTTCCTAACACAAGCAACTGCCTCCATACTAATCCTCTTCTCAAGCATAACCAACGCATGGTCCTCCGGACAATGAGACATTACCCAACTCACCAACCCCCTCTCATGCCTTCTACTCACCACCGCAGTTGCTATCAAACTAGGACTAACTCCATTCCACTTCTGATTCCCAGAAGTACTACAAGGCTCATCCCTCTCCACAGCCCTGCTACTCTCGACAGCAATAAAACTCCCACCAACCACCATCCTACTTCTCACATCACACTCACTAAACCCCACATTACTCTCCACCATGGCTATCACATCCATCGCCCTAGGCGGCTGAATAGGACTTAACCAAACACAAACCCGAAAAATCCTAGCTTTTTCATCTATTTCACACCTAGGCTGAATAACCATCATCATCACCTACAACCCAAAACTAACCCTACTAACCTTCTACCTCTATACCCTAATAACAACGTCCATCTTCCTCACTATAAACTCAGCCAACACCCTAAAACTATCAACGCTAATAACCTCATGAACCAAAACCCCTGTACTAAATTCAACCCTCATACTAACCCTTCTATCACTAGCAGGCCTTCCCCCACTAACAGGCTTCCTCCCCAAATGACTCATCATTCAAGAACTCACCAAGCAAGAAATAACCGTAACAGCTACTATCATCTCCATACTCTCACTCCTAGGGCTCTTCTTCTATCTACGCCTAACGTACTGTTCAACAATCACACTCCCCCCCAACCCTTCAAACAAAATAAAACAATGATCCGCTAAAAAACCAATCAACATCTTAATCCCCCCATTCACCCTCCTATCCCTATCACTCCTACCACTCTCCCCCATAATCCTTACAACCACTTAAGAAACTTAGGATAATACCAAACCAAAG",
			colors: ["yellow", "red", "gray", "black"]
		}
	};
})();
