(function () {
	var spacer = 130,
		radiusMultiplier = 18,
		radiusAdder = 4,
		nucleotides = "ACGT",
		circleDrawTime = 3000,
		circleRemoveTime = circleDrawTime / 4,
		redrawTimeout = 200,
		currBird = "pionus",
		maxRadius = ((nucleotides.length - 1) + radiusAdder) * radiusMultiplier;

	var birdVis;

	// Turns a nucleotide into a number
	var nucleotideToNum = function(char) {
		return nucleotides.indexOf(char);
	}

	// Takes a DNA char string
	// Returns an array of nums
	var makeData = function(str) {
		return str.split('').map(function(char) { return nucleotideToNum(char); });
	}

	// Writes visualization to div#birdVis
	// param data: array of raw numbers used for computing radii
	// param colors: array of colors to be applied to shapes
	// param shouldAnimate: true if user wants animation
	var writeVis = function(data, colors, shouldAnimate){
		if (shouldAnimate) {
			birdVis.forEach(function(circ) {
				circ.animate({r: 0}, circleRemoveTime, "linear", function() {
					circ.remove();
				});
			});
		} else {
			birdVis.clear();
		}
		var currX = 0,
			currY = 0,
			i = 0;
		while (currY <= screen.height) {
			var radius = (data[i] + radiusAdder) * radiusMultiplier;
			var newCircle;
			newCircle = birdVis.circle(currX, currY, (shouldAnimate ? 0 : radius));
			newCircle.attr({fill: colors[data[i]], stroke: colors[data[i]]});
			currX += radius + spacer;
			if (shouldAnimate)
				newCircle.animate({r: radius}, circleDrawTime, "elastic");
			if (currX > screen.width) {
				currX = 0;
				currY += maxRadius + spacer;
			}
			i++;
		}
	};

	// Changes the visualization to show the selected bird
	// Param newBird: the simple string representing the type of bird
	var changeBird = function(newBird) {
		currBird = newBird;
		writeVis(makeData(birds[newBird].seq), birds[newBird].colors, true);
	};

	// Redraws the visualization after a brief timeout whenever the
	// screen is resized
	window.onresize = function() {
		setTimeout(function() {
			writeVis(makeData(birds[currBird].seq), birds[currBird].colors, false);
		}, redrawTimeout);
	};

	// BOOM!
	window.onload = function() {
		birdVis = Raphael("birdVis");
		makeSelectTag();
		changeBird(currBird);
	};

	// Makes link tags for the page
	// Binds clicks to visualization updates and maintains active nav
	var makeSelectTag = function() {
		for (var bird in birds) {
			var btn = document.createElement("a");
			btn.textContent = birds[bird].name;
			btn.id = bird;
			btn.className = "button chooser";
			document.getElementById("choicesContainer").appendChild(btn);
			btn.onclick = function(e) {
				e.preventDefault();
				var allButtons = document.getElementsByClassName("active");
				for (var i = 0; i < allButtons.length; i++)
					allButtons[i].className = "button chooser";
				this.className = "button chooser active";
				changeBird(this.id);
			};
		}
	};

	// Bird data!
	var birds = {
		pionus: {
			name: "Maximilian Pionus",
			seq: "ATAACTCCCATTGCAAAACTAATCTCAGCCCTAAGTATCCTGCTAGGAACAACAATAACAATCACAAGTAACCACTGAGCCATAGCTTGGGCAGGACTAGAAATCAACACCCTATCAATCATCCCCATAATCTCAAAATCCCACCACCCACGAGCCGTTGAAGCAGCAACCAAGTACTTCCTAGTACAAGCTGCCGCTTCAACACTAGTACTCTTCTCAAGCACAATCAACGCATGACACACAGGACAATGAGACATCACCCTACTCACCCATCCCCCAGCATGTCTCCTACTAACCACCGCAGTTGCTATTAAGCTGGGCCTAACTCCATTCCACTTTTGATTTCCAGAAGTACTCCAAGGGTCATCCCTCCCCACAGCCCTACTTCTCTCAACAGTAATAAAACTCCCACCAATTACACTCCTACTAATCACATCCCACTCACTAAACCCTGTCCTACTCACTACCATATCCATTATATCCGTCGCCCTTGGCGGCTGAATGGGACTAAACCAAACACAAACCCGAAAAATTATAGCCTTCTCATCCATCTCCCACCTGGGCTGAATAACATCCATTATCACCTACAGCCCAAAACTAACCCTACTAACCTTCTACGCCTACGCCCTAATAACAACCTCCATCTTCCTCACTATAAACACAACCAACACCTTAAAACTATCAACACTAATGACTGCATGAACCAAAACTCCCATACTAAACACAACCCTCATACTAACACTACTATCACTAGCAGGCCTCCCCCCACTAACAGGCTTCCTGCCCAAATGACTCATCATCCAAGAACTCGTCAAGCAAGAAATAACCACAACAGCCACAATCATCTCCATAATATCGCTCCTAGGGTTATTCTTCTACCTACGCCTAGCATACTGCTCCACTATCACACTCCCCCCCAACCCCTCTAGCAAGATAAAACAGTGATCCACTAAAAACCCAACCAACACTCTAGTCTCCACACTCACCTCCCTGTCCATCTCACTCCTCCCACTCTCCCCTATAATCCTCACCACCACTTAA",
			colors: ["olive", "green", "silver", "purple"]
		},
		regent: {
			name: "Regent Parakeet",
			seq: "ATGAGTCCCCTTACAAAACTTATTCTAACTACAAGTCTGCTCACAGGGACAACAATCACAATCACAAGCAACCACTGACTAATAGCCTGAACCGGATTAGAAATCAACACCTTAGCCATCATCCCCCTAATCTCAAAATCCCACCACCCACGAGCCATCGAAGCAGCAACCAAATACTTCCTAGTACAAGCAGCAGCCTCCACACTAATACTCTTCTCAAGCACAATAAACGCATGATTTACTGGACAGTGAGACATCACCCAGCTCACCCACCCTCCATCATCCGCTCTACTAACCGCTGCAATCGCTATTAAACTAGGCCTAGCCCCATTCCACTTCTGATTTCCAGAAGCACTCCAAGGGTCATCCCTTACCACGGCCCTCCTTCTCTCAACAGTAATAAAACTCCCACCAACTACCATTCTCCTACTCACATCACACTCACTAAACCCAACACTACTCACCACCATATCCATCATATCCATCGCCCTAGGTGGATGAATAGGACTTAACCAAACACAAACCCGCAAAATCCTAGCCTTCTCCTCCATTTCACACCTAGGCTGAATAACCACCATCATCATCTACAACCCAAAACTAACCCTACTAACCTTCCTCACCTACATCCTAATAACAACCTCTATCTTTCTCACCATAAACACAACCAACACCCTAAAGCTACCAACGCTAATAACCTCCTGAACCAAAACCCCCACCCTAAGCACAACCCTCATACTAACCCTCCTCTCACTAGCGGGTCTCCCCCCACTAACAGGATTTTTACCCAAATGACTCATCATCCAAGAGCTCACTAAACAAGAAATAACCACAACAGCTACAATCATCTCTATATTCTCACTCCTAGGACTATTCTTCTACCTCCGCTTGGCATACTGTTCAACAATCACCCTACCTCCAAACCCCTCAAACAAAATAAAACAATGATCCCCTAAAAAACCAACAAACATCCTAATCTCTACATCTACCTCACTATCCACCTCACTCCTACCACTCTCCCCTATAATTCTCACCACCATTTAA",
			colors: ["#ff3f00", "#446389", "#41d344", "#5a845a"] // red blue lightgreen olivegreen
		},
		yellowCrested: {
			name: "Yellow-Crested Cockatoo",
			seq: "GTTCAACTCCCTCCCCTACTAATGAGCCCCCTTACAAAACTCACCCTAACACTCAGCCTAGCCCTAGGAACAACAACCACAATCACAAGCAACCACTGAGTCACAGCCTGAGCTGGATTAGAAATCAACACCTTAGCCATTATTCCATTGATCTCAAAATCTCACCACCCCCGAGCTATCGAAGCAGCAACCAAATATTTCCTAACCCAAGCAACTGCCTCAGCACTAATACTCTTTTCAAGCACAACCAACGCATGGTCTTCCGGACAATGAGACATCACCCAACTCACCAACCCTCCATCATGTCTCCTCCTTACAACTGCAATCGCAATCAAACTAGGCCTCACCCCATTCCACTTTTGATTCCCAGAAGTGCTACAAGGCTCATCCCTCACCACAGCCCTGCTGCTCTCCACAGCAATAAAACTCCCACCAACCGCCATTCTACTCCTCACTTCACACTCACTAAACCCCACGCTACTCTTCACCATAGCCATAATATCTATTGCCTTAGGCGGCTGAATAGGGCTTAATCAAACACAAACCCGAAAGATCCTAGCCTTCTCATCCATCTCACACCTAGGCTGAATAACCATCATCATCACCTACAACCCAAAGCTAACTCTGCTAACCTTCTACCTCTACACCCTAATAACAGCATCCATCTTCCTCTCCATAAACTCAACCAATACCCTAAAACTATCAACACTAATAACCTCATGAACCAAAACCCCCATACTAAATACAACCCTTATACTAACCCTCCTGTCATTAGCAGGCCTCCCCCCACTAACAGGCTTTCTACCCAAATGACTTATCATCCAAGAGCTAACCAAACAGGAAATAGCCACAACAGCCACTATTATCTCTATACTCTCACTCCTGGGGCTATTCTTCTACCTACGCCTAGCGTACTGTTCAACAATCACCCTCCCCCCCAACTCCTCAAACAAAATAAAACAGTGATCCACCAAAAAACCAACTAACCCCCTAATTCCCACACTCACGCTCCTATCCCTGTTACTCCTGCCACTCTCCCCCATAATCCCCACCACCACTTAAGAAACTTAGGATAATATCAAACCAAGG",
			colors: ["orange", "white", "gray", "#fff200"] // orange white gray yellow
		},
		palm: {
			name: "Black Palm Cockatoo",
			seq: "GTTGAGCCCCCTCCCCTACTAATGAGCCCCCTCACAAAATTCATCCTAGCACTAAGCCTAACCTCAGGGACAATAATCACAATCACAAGCAACCACTGAGTAATAGCCTGAGCCGGACTAGAAATCAATACCCTAACCATTCTCCCCCTAATCTCAAAATCCCACCACCCCCGAGCCATCGAAGCTACAATCAAATACTTCCTAACACAAGCAACTGCCTCCATACTAATCCTCTTCTCAAGCATAACCAACGCATGGTCCTCCGGACAATGAGACATTACCCAACTCACCAACCCCCTCTCATGCCTTCTACTCACCACCGCAGTTGCTATCAAACTAGGACTAACTCCATTCCACTTCTGATTCCCAGAAGTACTACAAGGCTCATCCCTCTCCACAGCCCTGCTACTCTCGACAGCAATAAAACTCCCACCAACCACCATCCTACTTCTCACATCACACTCACTAAACCCCACATTACTCTCCACCATGGCTATCACATCCATCGCCCTAGGCGGCTGAATAGGACTTAACCAAACACAAACCCGAAAAATCCTAGCTTTTTCATCTATTTCACACCTAGGCTGAATAACCATCATCATCACCTACAACCCAAAACTAACCCTACTAACCTTCTACCTCTATACCCTAATAACAACGTCCATCTTCCTCACTATAAACTCAGCCAACACCCTAAAACTATCAACGCTAATAACCTCATGAACCAAAACCCCTGTACTAAATTCAACCCTCATACTAACCCTTCTATCACTAGCAGGCCTTCCCCCACTAACAGGCTTCCTCCCCAAATGACTCATCATTCAAGAACTCACCAAGCAAGAAATAACCGTAACAGCTACTATCATCTCCATACTCTCACTCCTAGGGCTCTTCTTCTATCTACGCCTAACGTACTGTTCAACAATCACACTCCCCCCCAACCCTTCAAACAAAATAAAACAATGATCCGCTAAAAAACCAATCAACATCTTAATCCCCCCATTCACCCTCCTATCCCTATCACTCCTACCACTCTCCCCCATAATCCTTACAACCACTTAAGAAACTTAGGATAATACCAAACCAAAG",
			colors: ["#ff3f00", "#666", "#444", "black"] // red gray gray black
		}
	};
})();
